#include "stm8s.h"

void clock_setup(void);
void GPIO_setup(void);
void delay_us(unsigned int us);
void delay_ms(signed int ms);
void delay_s(signed int s);

int main(void)
{
	clock_setup();
	GPIO_setup();
	
	while (1) {
		GPIO_WriteHigh(GPIOD, GPIO_PIN_7);
		delay_ms(3);
		GPIO_WriteLow(GPIOD, GPIO_PIN_7);
		delay_ms(3);
	}
}

void clock_setup(void)
{
	CLK_DeInit();
	CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);
	CLK_SYSCLKConfig(CLK_PRESCALER_CPUDIV1);
	TIM4_DeInit();
}

void GPIO_setup(void)
{
	GPIO_Init(GPIOD, GPIO_PIN_7, GPIO_MODE_OUT_PP_LOW_FAST);
}

void delay_us(unsigned int us)
{
	TIM4_TimeBaseInit(TIM4_PRESCALER_16, us);
	
	/* Clear TIM4 update flag */
	TIM4_ClearFlag(TIM4_FLAG_UPDATE);
	/* Enable update interrupt */
	TIM4_ITConfig(TIM4_IT_UPDATE, DISABLE);
	
	/* Enable TIM4 */
	TIM4_Cmd(ENABLE);
	
	while(SET != TIM4_GetFlagStatus(TIM4_FLAG_UPDATE));  
}

void delay_ms(signed int ms)
{
	while (ms--) {
		delay_us(200);
		delay_us(200);
		delay_us(200);
		delay_us(200);
		delay_us(200);
  }	
}

void delay_s(signed int s)
{
	while (s--) {
		delay_ms(1000);
  }	
}

#ifdef USE_FULL_ASSERT
void assert_failed(u8* file, u32 line)
{ 
}
#endif
